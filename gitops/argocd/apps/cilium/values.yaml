# Complete kube-proxy replacement for unified networking
kubeProxyReplacement: "true"

# IP Address Management
ipam:
  mode: kubernetes

# Kubernetes API server configuration
k8sServiceHost: "localhost"
k8sServicePort: 7445

# Security contexts for Cilium components
securityContext:
  capabilities:
    ciliumAgent: [ "CHOWN", "KILL", "NET_ADMIN", "NET_RAW", "IPC_LOCK", "SYS_ADMIN", "SYS_RESOURCE", "DAC_OVERRIDE", "FOWNER", "SETGID", "SETUID" ]
    cleanCiliumState: [ "NET_ADMIN", "SYS_ADMIN", "SYS_RESOURCE" ]

# Container group filesystem configuration
cgroup:
  autoMount:
    enabled: false
  hostRoot: /sys/fs/cgroup

# === SERVICE MESH FEATURES ===
# Enable sidecar-less service mesh
l7Proxy: true
envoy:
  enabled: true

# Service mesh load balancing
loadBalancer:
  acceleration: "native" # XDP acceleration for high performance
  l7:
    backend: "envoy" # Enable L7 load balancing via Envoy
    algorithm: "round_robin" # Default algorithm
    ports: [ 80, 443, 8080, 9090 ] # Auto-redirect common ports

# === INGRESS & GATEWAY API ===
gatewayAPI:
  enabled: true
  enableAlpn: true
  enableAppProtocol: true

ingressController:
  enabled: true
  default: true # Make Cilium the default ingress controller
  loadbalancerMode: "shared" # Use shared load balancer
  service:
    type: LoadBalancer
    name: "cilium-ingress"
    annotations:
      # Enable external traffic policy for source IP preservation
      service.cilium.io/external-traffic-policy: "Local"

# === NETWORKING FEATURES ===
nodePort:
  enabled: true
  bindProtection: true
  enableHealthCheck: true

hostServices:
  enabled: true

# BGP control plane for advanced routing
bgpControlPlane:
  enabled: true

# Egress gateway for controlled outbound traffic
egressGateway:
  enabled: true

# === OBSERVABILITY & MONITORING ===
hubble:
  enabled: true
  relay:
    enabled: true
    prometheus:
      enabled: true
      serviceMonitor:
        enabled: true
  ui:
    enabled: true
    ingress:
      enabled: true
      className: "cilium"
      hosts:
        - hubble.infraflux.local
  metrics:
    enabled:
      - dns
      - drop
      - tcp
      - flow
      - port-distribution
      - icmp
      - httpV2

# Prometheus integration
prometheus:
  enabled: true
  serviceMonitor:
    enabled: true
    labels:
      prometheus: kube-prometheus

# === SECURITY FEATURES ===
# Enable WireGuard encryption for node-to-node traffic
encryption:
  enabled: true
  type: "wireguard"

# Network policy enforcement
policyEnforcement: "default"

# Enable identity-based security
bpf:
  policyMapMax: 16384

# Socket-level load balancing for improved performance
socketLB:
  enabled: true
  hostNamespaceOnly: false

# === CLUSTER MESH ===
clustermesh:
  useAPIServer: true
  enableEndpointSliceSynchronization: true

# === BANDWIDTH MANAGEMENT ===
bandwidthManager:
  enabled: true

# === ADDITIONAL FEATURES ===
# Enable IPv6 support
ipv6:
  enabled: false

# Local redirect policies
localRedirectPolicies:
  enabled: true

# Enable host firewall
hostFirewall:
  enabled: true

# Debug and development features
debug:
  enabled: false

# Operator configuration
operator:
  replicas: 2 # High availability
  prometheus:
    enabled: true
    serviceMonitor:
      enabled: true
