apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: infraflux-infrastructure-alerts
  namespace: monitoring
  labels:
    prometheus: kube-prometheus
    role: alert-rules
spec:
  groups:
    - name: infraflux.node.rules
      rules:
        - alert: NodeDown
          expr: up{job="node-exporter"} == 0
          for: 5m
          labels:
            severity: critical
          annotations:
            summary: "Node {{ $labels.instance }} is down"
            description: "Node {{ $labels.instance }} has been down for more than 5 minutes."

        - alert: NodeHighCPUUsage
          expr: 100 - (avg(irate(node_cpu_seconds_total{mode="idle"}[5m])) by (instance) * 100) > 80
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: "High CPU usage on {{ $labels.instance }}"
            description: "CPU usage is above 80% for more than 10 minutes on {{ $labels.instance }}."

        - alert: NodeHighMemoryUsage
          expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 85
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: "High memory usage on {{ $labels.instance }}"
            description: "Memory usage is above 85% for more than 10 minutes on {{ $labels.instance }}."

        - alert: NodeDiskSpaceUsage
          expr: (1 - (node_filesystem_avail_bytes{fstype!="tmpfs"} / node_filesystem_size_bytes{fstype!="tmpfs"})) * 100 > 90
          for: 10m
          labels:
            severity: critical
          annotations:
            summary: "High disk usage on {{ $labels.instance }}"
            description: "Disk usage is above 90% on {{ $labels.instance }} filesystem {{ $labels.mountpoint }}."

        - alert: NodeLoadAverage
          expr: node_load15 / count(node_cpu_seconds_total{mode="idle"}) by (instance) > 2
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: "High load average on {{ $labels.instance }}"
            description: "Load average is high for more than 10 minutes on {{ $labels.instance }}."

    - name: infraflux.kubernetes.rules
      rules:
        - alert: KubernetesPodCrashLooping
          expr: rate(kube_pod_container_status_restarts_total[15m]) * 60 * 15 > 0
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: "Pod {{ $labels.namespace }}/{{ $labels.pod }} is crash looping"
            description: "Pod {{ $labels.namespace }}/{{ $labels.pod }} container {{ $labels.container }} is restarting frequently."

        - alert: KubernetesPodNotReady
          expr: kube_pod_status_ready{condition="false"} == 1
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: "Pod {{ $labels.namespace }}/{{ $labels.pod }} not ready"
            description: "Pod {{ $labels.namespace }}/{{ $labels.pod }} has been in not ready state for more than 10 minutes."

        - alert: KubernetesDeploymentReplicasMismatch
          expr: kube_deployment_spec_replicas != kube_deployment_status_ready_replicas
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: "Deployment {{ $labels.namespace }}/{{ $labels.deployment }} replicas mismatch"
            description: "Deployment {{ $labels.namespace }}/{{ $labels.deployment }} has mismatched replica count."

        - alert: KubernetesStatefulSetReplicasMismatch
          expr: kube_statefulset_status_replicas_ready != kube_statefulset_status_replicas
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: "StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} replicas mismatch"
            description: "StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} has mismatched replica count."

        - alert: KubernetesPersistentVolumeUsage
          expr: (kubelet_volume_stats_used_bytes / kubelet_volume_stats_capacity_bytes) * 100 > 90
          for: 5m
          labels:
            severity: critical
          annotations:
            summary: "PVC {{ $labels.namespace }}/{{ $labels.persistentvolumeclaim }} usage high"
            description: "PVC {{ $labels.namespace }}/{{ $labels.persistentvolumeclaim }} is using more than 90% of its capacity."

    - name: infraflux.etcd.rules
      rules:
        - alert: EtcdInsufficientMembers
          expr: count(up{job=~".*etcd.*"} == 1) < (count(up{job=~".*etcd.*"}) / 2 + 1)
          for: 3m
          labels:
            severity: critical
          annotations:
            summary: "Etcd cluster insufficient members"
            description: "Etcd cluster has insufficient number of members ({{ $value }})."

        - alert: EtcdNoLeader
          expr: etcd_server_has_leader{job=~".*etcd.*"} == 0
          for: 1m
          labels:
            severity: critical
          annotations:
            summary: "Etcd member {{ $labels.instance }} has no leader"
            description: "Etcd member {{ $labels.instance }} has no leader."

        - alert: EtcdHighNumberOfLeaderChanges
          expr: increase(etcd_server_leader_changes_seen_total{job=~".*etcd.*"}[1h]) > 3
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: "Etcd high number of leader changes"
            description: "Etcd instance {{ $labels.instance }} has seen {{ $value }} leader changes within the last hour."

        - alert: EtcdDatabaseSizeLimit
          expr: etcd_mvcc_db_total_size_in_bytes / etcd_server_quota_backend_bytes > 0.8
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: "Etcd database size approaching limit"
            description: "Etcd database size is approaching the limit on {{ $labels.instance }}."
