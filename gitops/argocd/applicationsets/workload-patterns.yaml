apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: web-applications
  namespace: argocd
spec:
  generators:
    - git:
        repoURL: https://github.com/your-org/app-configs
        revision: HEAD
        directories:
          - path: "apps/web/*"
          - path: "apps/frontend/*"
  template:
    metadata:
      name: '{{path.basename}}'
      namespace: argocd
      finalizers:
        - resources-finalizer.argocd.argoproj.io
    spec:
      project: applications
      source:
        repoURL: https://github.com/your-org/app-configs
        path: '{{path}}'
        targetRevision: HEAD
        helm:
          valueFiles:
            - values.yaml
            - values-{{env}}.yaml
      destination:
        server: https://kubernetes.default.svc
        namespace: '{{path.basename}}'
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
          - RespectIgnoreDifferences=true
      ignoreDifferences:
        - group: apps
          kind: Deployment
          jsonPointers:
            - /spec/replicas
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: microservices
  namespace: argocd
spec:
  generators:
    - git:
        repoURL: https://github.com/your-org/microservices
        revision: HEAD
        directories:
          - path: "services/*/deploy"
  template:
    metadata:
      name: 'service-{{path[1]}}'
      namespace: argocd
      labels:
        app.kubernetes.io/name: '{{path[1]}}'
        app.kubernetes.io/part-of: microservices
    spec:
      project: applications
      source:
        repoURL: https://github.com/your-org/microservices
        path: '{{path}}'
        targetRevision: HEAD
        helm:
          parameters:
            - name: image.tag
              value: '{{env.IMAGE_TAG}}'
            - name: service.name
              value: '{{path[1]}}'
          valueFiles:
            - values.yaml
            - ../values-{{env}}.yaml
      destination:
        server: https://kubernetes.default.svc
        namespace: 'microservices-{{env}}'
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
        retry:
          limit: 5
          backoff:
            duration: 5s
            factor: 2
            maxDuration: 3m
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: database-applications
  namespace: argocd
spec:
  generators:
    - clusters:
        selector:
          matchLabels:
            environment: production
    - git:
        repoURL: https://github.com/your-org/database-configs
        revision: HEAD
        files:
          - path: "databases/*.yaml"
  template:
    metadata:
      name: 'db-{{name}}-{{cluster.name}}'
      namespace: argocd
    spec:
      project: platform
      source:
        repoURL: https://bitnami.com/charts
        chart: '{{chart}}'
        targetRevision: '{{version}}'
        helm:
          values: |
            auth:
              rootPassword: "{{rootPassword}}"
              database: "{{database}}"
            primary:
              persistence:
                enabled: true
                size: {{storage.size}}
                storageClass: {{storage.class}}
            metrics:
              enabled: true
              serviceMonitor:
                enabled: true
            resources:
              limits:
                memory: {{resources.memory}}
                cpu: {{resources.cpu}}
              requests:
                memory: {{resources.requests.memory}}
                cpu: {{resources.requests.cpu}}
      destination:
        server: '{{cluster.server}}'
        namespace: 'databases'
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
