name: CI

on:
  pull_request:
  push:
    branches: [ main ]
  workflow_dispatch:


permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  go:
    name: Go build, test & lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ '1.22.x', '1.23.x' ]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          check-latest: true
      - name: Go version
        run: go version
      - name: Build
        working-directory: cli
        run: go build ./...
      - name: Test
        working-directory: cli
        run: go test -vet=off ./...
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: --timeout=5m
          working-directory: cli

  yamllint:
    name: YAML lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: yamllint
        uses: ibiqlik/action-yamllint@v3
        with:
          config_file: .yamllint.yaml

  kubeconform:
    name: Validate Kubernetes manifests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup kubeconform
        uses: bmuschko/setup-kubeconform@v1

      - name: Validate manifests (strict)
        shell: bash
        run: |
          set -euo pipefail
          # Find all YAML except common binary/templated outputs
          mapfile -t FILES < <(git ls-files | grep -E '\.ya?ml$' \
            | grep -vE '^out/' || true)
          if (( ${#FILES[@]} == 0 )); then
            echo "No YAML files to validate."; exit 0
          fi
          kubeconform \
            -summary -strict -ignore-missing-schemas \
            -kubernetes-version 1.30.0 \
            -schema-location default \
            "${FILES[@]}"

  docs:
    name: Build docs (MkDocs --strict)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install MkDocs & theme
        run: pip install -q mkdocs mkdocs-material
      - name: Build
        run: mkdocs build --strict

  actionlint:
    name: Lint GitHub workflows
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: actionlint
        uses: raven-actions/actionlint@v2

  secrets:
    name: Secret scan (Gitleaks)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # scan history on PRs
      - name: gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --no-git -v
