apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: longhorn
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
  labels:
    app.kubernetes.io/name: longhorn
    app.kubernetes.io/component: infrastructure
spec:
  project: platform
  source:
    repoURL: https://longhorn.github.io/charts
    chart: longhorn
    targetRevision: 1.5.0
    helm:
      values: |
        # Global configuration
        global:
          nodeSelector: {}
          tolerations: []

        # Longhorn manager configuration
        longhornManager:
          priorityClass: system-cluster-critical
          tolerations: []
          nodeSelector: {}

        # Longhorn driver configuration
        longhornDriver:
          priorityClass: system-cluster-critical
          tolerations: []
          nodeSelector: {}

        # Service configuration
        service:
          ui:
            type: ClusterIP
            nodePort: null

        # Persistence configuration
        persistence:
          defaultClass: true
          defaultClassReplicaCount: {{ .Values.storage.longhorn.defaultReplicas | default 3 }}
          reclaimPolicy: Retain
          migratable: false
          recurringJobSelector:
            enable: false
            jobList: []
          backingImage:
            enable: false
            name: ~
            dataSourceType: ~
            dataSourceParameters: ~
            expectedChecksum: ~

        # Default settings
        defaultSettings:
          backupstorePollInterval: 300
          backupTarget: ~
          backupTargetCredentialSecret: ~
          allowRecurringJobWhileVolumeDetached: ~
          createDefaultDiskLabeledNodes: ~
          defaultDataPath: ~
          defaultDataLocality: ~
          replicaSoftAntiAffinity: ~
          replicaAutoBalance: ~
          storageOverProvisioningPercentage: {{ .Values.storage.longhorn.storageOverProvisioningPercentage | default 200 }}
          storageMinimalAvailablePercentage: {{ .Values.storage.longhorn.storageMinimalAvailablePercentage | default 25 }}
          upgradeChecker: ~
          defaultReplicaCount: {{ .Values.storage.longhorn.defaultReplicas | default 3 }}
          defaultLonghornStaticStorageClass: ~
          backupTargetCredentialSecret: ~
          allowVolumeCreationWithDegradedAvailability: ~
          autoSalvage: ~
          autoDeletePodWhenVolumeDetachedUnexpectedly: ~
          disableSchedulingOnCordonedNode: ~
          replicaZoneSoftAntiAffinity: ~
          nodeDownPodDeletionPolicy: ~
          allowNodeDrainWithLastHealthyReplica: ~
          mkfsExt4Parameters: ~
          disableReplicaRebuild: ~
          replicaReplenishmentWaitInterval: ~
          concurrentReplicaRebuildPerNodeLimit: ~
          disableRevisionCounter: ~
          systemManagedPodsImagePullPolicy: ~
          allowVolumeCreationWithDegradedAvailability: ~
          autoCleanupSystemGeneratedSnapshot: ~
          concurrentAutomaticEngineUpgradePerNodeLimit: ~
          backingImageCleanupWaitInterval: ~
          backingImageRecoveryWaitInterval: ~
          guaranteedEngineManagerCPU: ~
          guaranteedReplicaManagerCPU: ~

        # Private registry settings
        privateRegistry:
          createSecret: ~
          registryUrl: ~
          registryUser: ~
          registryPasswd: ~
          registrySecret: ~

        # Longhorn UI ingress
        ingress:
          enabled: true
          ingressClassName: nginx
          annotations:
            cert-manager.io/cluster-issuer: {{ .Values.certManager.defaultIssuer | default "letsencrypt-staging" }}
            nginx.ingress.kubernetes.io/auth-type: basic
            nginx.ingress.kubernetes.io/auth-secret: longhorn-basic-auth
            nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
          host: longhorn.{{ .Values.environment.domain | default "platform.local" }}
          tls: true
          tlsSecret: longhorn-tls
          path: /
          pathType: Prefix

        # Longhorn UI service
        longhornUI:
          replicas: 1
          priorityClass: ~
          tolerations: []
          nodeSelector: {}

        # Resource requests and limits
        resources:
          limits:
            cpu: 200m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 256Mi

        # Service monitor for Prometheus
        serviceMonitor:
          enabled: true
          interval: 30s
          scrapeTimeout: 10s

  destination:
    server: https://kubernetes.default.svc
    namespace: longhorn-system

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
---
apiVersion: v1
kind: Secret
metadata:
  name: longhorn-basic-auth
  namespace: longhorn-system
type: Opaque
data:
  # Default: admin/longhorn (change in production)
  auth: YWRtaW46JGFwcjEkSDY1dnpkei5VJDl1eDNybzhkSmRVL2F0TGhrWnZDZzE=
