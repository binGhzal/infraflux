---
- name: Gather hostvars for VM
  ansible.builtin.set_fact:
    vm_name: "{{ vmhost }}"
    vm_ip: "{{ hostvars[vmhost].ansible_host }}"
    vm_mac: "{{ hostvars[vmhost].mac | default('') }}"
    vm_node: "{{ hostvars[vmhost].proxmox_node | default(proxmox_node_default) }}"

- name: Build cloud-init and network strings
  ansible.builtin.set_fact:
  vm_net0: "virtio{{ (((vm_mac | default('') | string | length) | int) > 0) | ternary(',macaddr=' + vm_mac, '') }},bridge={{ proxmox_vm_network_bridge }}{{ ((((proxmox_vm_vlan_tag | default('') | string | length) | int) > 0)) | ternary(',tag=' + (proxmox_vm_vlan_tag | string), '') }}"
  vm_ipconfig0: "ip={{ vm_ip }}/24{{ ((((proxmox_vlan_gateway | default('') | string | length) | int) > 0)) | ternary(',gw=' + (proxmox_vlan_gateway | string), '') }}"
    vm_sshkeys: "{{ (ci_ssh_authorized_keys | reject('equalto', '')) | list | join('\n') }}"
    vm_cipassword: "{{ (ci_password | default('') | string | length) | int > 0 | ternary(ci_password, omit) }}"

- name: Create or update VM
  vars:
    proxmox_vm_params:
      api_user: "{{ api_user }}"
      api_password: "{{ api_pass }}"
      api_host: "{{ api_host }}"
      node: "{{ vm_node }}"
      name: "{{ vm_name }}"
      state: present
      clone: "{{ template_name }}"
      full: true
      sockets: 1
      cores: "{{ proxmox_vm_cores }}"
      memory: "{{ proxmox_vm_ram }}"
      scsihw: virtio-scsi-pci
      scsi0: "{{ proxmox_storage }}:{{ proxmox_vm_disk_size_gb }}"
      net0: "{{ vm_net0 }}"
      boot: c
      bootdisk: scsi0
      sshkeys: "{{ vm_sshkeys }}"
      ciuser: "{{ ci_user }}"
      cipassword: "{{ vm_cipassword }}"
      ipconfig0: "{{ vm_ipconfig0 }}"
      update: true
      force: false
      onboot: true
  community.general.proxmox_kvm: "{{ proxmox_vm_params }}"
  register: vm_result
  delegate_to: localhost

- name: Start VM if stopped
  community.general.proxmox_kvm:
    api_user: "{{ api_user }}"
    api_password: "{{ api_pass }}"
    api_host: "{{ api_host }}"
    node: "{{ vm_node }}"
    name: "{{ vm_name }}"
    state: started
